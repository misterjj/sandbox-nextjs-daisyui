/* tslint:disable */
/* eslint-disable */
/**
 * Hello API Platform
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CategoryJsonldContextOneOf
 */
export interface CategoryJsonldContextOneOf {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof CategoryJsonldContextOneOf
     */
    vocab: string;
    /**
     * 
     * @type {string}
     * @memberof CategoryJsonldContextOneOf
     */
    hydra: CategoryJsonldContextOneOfHydraEnum;
}


/**
 * @export
 */
export const CategoryJsonldContextOneOfHydraEnum = {
    HttpWwwW3OrgNsHydraCore: 'http://www.w3.org/ns/hydra/core#'
} as const;
export type CategoryJsonldContextOneOfHydraEnum = typeof CategoryJsonldContextOneOfHydraEnum[keyof typeof CategoryJsonldContextOneOfHydraEnum];


/**
 * Check if a given object implements the CategoryJsonldContextOneOf interface.
 */
export function instanceOfCategoryJsonldContextOneOf(value: object): value is CategoryJsonldContextOneOf {
    if (!('vocab' in value) || value['vocab'] === undefined) return false;
    if (!('hydra' in value) || value['hydra'] === undefined) return false;
    return true;
}

export function CategoryJsonldContextOneOfFromJSON(json: any): CategoryJsonldContextOneOf {
    return CategoryJsonldContextOneOfFromJSONTyped(json, false);
}

export function CategoryJsonldContextOneOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryJsonldContextOneOf {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'vocab': json['@vocab'],
        'hydra': json['hydra'],
    };
}

export function CategoryJsonldContextOneOfToJSON(json: any): CategoryJsonldContextOneOf {
    return CategoryJsonldContextOneOfToJSONTyped(json, false);
}

export function CategoryJsonldContextOneOfToJSONTyped(value?: CategoryJsonldContextOneOf | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        '@vocab': value['vocab'],
        'hydra': value['hydra'],
    };
}

