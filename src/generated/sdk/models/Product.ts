/* tslint:disable */
/* eslint-disable */
/**
 * Hello API Platform
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * 
     * @type {number}
     * @memberof Product
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    price: string;
    /**
     * 
     * @type {number}
     * @memberof Product
     */
    stock: number;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    image?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    nameFr?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    nameEn?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    descriptionFr?: string;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    descriptionEn?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Product
     */
    categories: Array<string>;
}

/**
 * Check if a given object implements the Product interface.
 */
export function instanceOfProduct(value: object): value is Product {
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('stock' in value) || value['stock'] === undefined) return false;
    if (!('categories' in value) || value['categories'] === undefined) return false;
    return true;
}

export function ProductFromJSON(json: any): Product {
    return ProductFromJSONTyped(json, false);
}

export function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'price': json['price'],
        'stock': json['stock'],
        'image': json['image'] == null ? undefined : json['image'],
        'nameFr': json['nameFr'] == null ? undefined : json['nameFr'],
        'nameEn': json['nameEn'] == null ? undefined : json['nameEn'],
        'descriptionFr': json['descriptionFr'] == null ? undefined : json['descriptionFr'],
        'descriptionEn': json['descriptionEn'] == null ? undefined : json['descriptionEn'],
        'categories': json['categories'],
    };
}

export function ProductToJSON(json: any): Product {
    return ProductToJSONTyped(json, false);
}

export function ProductToJSONTyped(value?: Omit<Product, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'price': value['price'],
        'stock': value['stock'],
        'image': value['image'],
        'nameFr': value['nameFr'],
        'nameEn': value['nameEn'],
        'descriptionFr': value['descriptionFr'],
        'descriptionEn': value['descriptionEn'],
        'categories': value['categories'],
    };
}

